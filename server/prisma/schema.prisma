generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  password         String?
  name             String?
  isVerified       Boolean           @default(false)
  events           Event[]
  verificationcode Verificationcode?
  team             UserTeam[]
  createdAt        DateTime          @default(now())
}

model Team {
  id         Int        @id @default(autoincrement())
  name       String
  inviteCode String     @unique
  user       UserTeam[]
}

model UserTeam {
  id       Int          @id @default(autoincrement())
  status   inviteStatus @default(PENDING)
  role     Role         @default(MEMBER)
  isActive Boolean      @default(false)
  User     User         @relation(fields: [userId], references: [id])
  userId   Int
  Team     Team         @relation(fields: [teamId], references: [id])
  teamId   Int

  @@unique([userId, teamId])
}

model Event {
  id        Int      @id @default(autoincrement())
  title     String
  date      DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Verificationcode {
  id        Int       @id @default(autoincrement())
  code      String
  types     CodeTypes
  expireAt  DateTime
  createdAt DateTime  @default(now())
  attempts  Int
  used      Boolean   @default(false)
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
}

enum CodeTypes {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}

enum inviteStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum Role {
  MEMBER
  LEADER
}
